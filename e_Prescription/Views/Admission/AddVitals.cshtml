@model e_Prescription.Models.Admission

@{
    ViewData["Title"] = "Recapture Vitals";
    Layout = "_Layout2";
    var notifications = ViewBag.Notifications as List<string>;
    var hasNotifications = notifications != null && notifications.Any();
    var hasAlertMessage = ViewBag.AlertMessage != null;
    var hasErrorMessage = ViewBag.ErrorMessage != null;
}

<style>
    .equal-input {
        width: 100%;
        max-width: 150px; /* Adjust the width as */
    }

    .centered-container {
        display: flex;
        justify-content: center;
        margin-top: 20px; /* Adjust margin as needed */
    }

    .modal-header {
        background-color: #dc3545; /* Primary color */
        color: #fff;
    }

    .modal-header1 {
        background-color: #28a745; /* Primary color */
        color: #fff; /* White text */
    }

    .container {
        border: 5px solid #f5f5f5; /* Whitish color */
        overflow: hidden; /* Ensures content doesn't overflow the rounded corners */
        background-color: #f5f5f5;
    }

    .modal-error {
        background-color: #dc3545; /* Red for notifications */
        color: #fff; /* White text */
    }
</style>

@using Microsoft.AspNetCore.Mvc.Rendering

<div class="col-10 mx-auto pt-0 p-0 container">
    <div class="card justify-content-center">
        <div class="card-header bg-success text-uppercase text-white" style="height: 45px;">
            <h4 class="text-center">Re-Capture Vitals</h4>
        </div>

        <form enctype="multipart/form-data" asp-action="AddVitals" method="post" style="width: 100%;">
            <input type="hidden" name="Id" value="@Model.Id" />
            <br />
            <div class="col-md-12">
                @if (hasNotifications)
                {
                    <div class="notification">
                        <div class="modal fade" id="notificationModal" tabindex="-1" role="dialog" aria-labelledby="notificationModalLabel" aria-hidden="true" data-backdrop="static" data-keyboard="false">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="notificationModalLabel">Notifications</h5>
                                    </div>
                                    <div class="modal-body">
                                        @foreach (var notification in notifications)
                                        {
                                            <p>@notification</p>
                                        }
                                    </div>
                                    <div class="modal-footer">
                                        <a asp-controller="Admission" class="btn btn-success" asp-action="ViewAdmission" asp-route-patientId="@Model.Patient.IdNumber">View Admission</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                else if (hasAlertMessage)
                {
                    <div class="alert">
                        <div class="modal fade" id="alertModal" tabindex="-1" role="dialog" aria-labelledby="alertModalLabel" aria-hidden="true" data-backdrop="static" data-keyboard="false">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header1">
                                        <h5 class="modal-title" id="alertModalLabel">Alert</h5>
                                    </div>
                                    <div class="modal-body">
                                        <div class="alert alert-success d-flex justify-content-center">
                                            @ViewBag.AlertMessage
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <a asp-controller="Admission" class="btn btn-success" asp-action="ViewAdmission" asp-route-patientId="@Model.Patient.IdNumber">View Admission</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                else if (ViewBag.ErrorMessage != null)
                {
                    <div class="error">
                        <div class="modal fade show" id="errorModal" tabindex="-1" role="dialog" aria-labelledby="errorModalLabel" aria-hidden="true" data-backdrop="static" data-keyboard="false" style="display: block;">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-error">
                                        <h5 class="modal-title" id="errorModal">Error message</h5>
                                    </div>
                                    <div class="modal-body">
                                        <div class="alert alert-danger d-flex justify-content-center">
                                            @ViewBag.ErrorMessage
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <a asp-controller="Admission" class="btn btn-info" asp-action="ViewAdmission" asp-route-patientId="@Model.Patient.IdNumber">Go back</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <table id="ExpTable" class="table table-sm">
                        <thead>
                            <tr>
                                <th>Vital Name</th>
                                <th>Reading</th>
                                <th>Time</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.PatientsVitals.Count; i++)
                            {
                                <tr>
                                    <td>
                                        <select name="PatientsVitals[@i].VitalId" class="form-control" aria-required="true" required>
                                            <option value="">Select Vital</option>
                                            @foreach (var item in (IEnumerable<SelectListItem>)ViewBag.VitalNames)
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        </select>
                                    </td>
                                    <td>
                                        <input type="text" name="PatientsVitals[@i].Reading" class="form-control equal-input" aria-required="true" required pattern="^\d+(\.\d{1,2})?$|^\d{2,3}\/\d{2,3}$" title="Please enter a valid reading (e.g., 98.6 or 150/60)" />
                                        <div class="invalid-feedback" style="display:none;">Please enter a valid reading.</div>
                                    </td>
                                    <td>
                                        <input type="time" name="PatientsVitals[@i].Time" class="form-control" aria-required="true" required />
                                    </td>
                                    <td>
                                        @if (i == 0)
                                        {
                                            <button type="button" class="btn btn-sm btn-secondary" onclick="AddItem()">
                                                Add
                                            </button>
                                        }
                                        else
                                        {
                                            <button type="button" class="btn btn-sm btn-danger delete-button" onclick="DeleteItem(this)">
                                                Delete
                                            </button>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <div class="centered-container gap-3">
                        <button type="button" class="btn btn-info" style="width: 140px;" onclick="window.location.href='@Url.Action("ViewAdmission", "Admission", new { admissionId = Model.Id })'">Cancel</button>
                        <button type="submit" class="btn btn-success" style="width: 140px;">Submit</button>
                    </div>
                }


            </div>
        </form>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.2/jquery.validate.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js"></script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script type="text/javascript">
        let vitalIndex = @Model.PatientsVitals.Count;

        function DeleteItem(btn) {
            $(btn).closest('tr').remove();
        }

        function AddItem() {
            let table = document.getElementById('ExpTable').getElementsByTagName('tbody')[0];
            let newRow = table.insertRow();

            let cell1 = newRow.insertCell(0);
            let cell2 = newRow.insertCell(1);
            let cell3 = newRow.insertCell(2);
            let cell4 = newRow.insertCell(3);

            cell1.innerHTML = `<select name="PatientsVitals[${vitalIndex}].VitalId" class="form-control">
                                                <option value="">Select Vital</option>
        @foreach (var item in (IEnumerable<SelectListItem>)ViewBag.VitalNames)
        {
                                                            <option value="@item.Value">@item.Text</option>
        }
                                            </select>`;

            cell2.innerHTML = `<input type="text" name="PatientsVitals[${vitalIndex}].Reading" class="form-control" oninput="validateReading(this)" />`;
            cell3.innerHTML = `<input type="time" name="PatientsVitals[${vitalIndex}].Time" class="form-control" />`;
            cell4.innerHTML = `<button type="button" class="btn btn-sm btn-danger delete-button" onclick="DeleteItem(this)">Delete</button>`;

            vitalIndex++;
        }

        // Initial check to hide delete button for the first row
        document.querySelectorAll('.delete-button').forEach(button => {
            let row = button.closest('tr');
            let index = Array.from(row.parentNode.children).indexOf(row);
            if (index === 0) {
                button.style.display = 'none';
            }
        });

        // Trigger modals if there are notifications or alerts
        $(document).ready(function () {
            var hasNotifications = @Html.Raw(Json.Serialize(hasNotifications));
            var hasAlertMessage = @Html.Raw(Json.Serialize(hasAlertMessage));

            if (hasNotifications) {
                $('#notificationModal').modal({
                    backdrop: 'static',
                    keyboard: false
                }).modal('show');
            } else if (hasAlertMessage) {
                $('#alertModal').modal({
                    backdrop: 'static',
                    keyboard: false
                }).modal('show');
            } else if (hasErrorMessage) {
                $('#errorModal').modal({
                    backdrop: 'static',
                    keyboard: false
                }).modal('show');
            }
        });

        function validateReading(input) {
            const value = input.value;
            const feedback = input.nextElementSibling;
            if (isNaN(value) || value.trim() === "") {
                feedback.style.display = "block";
            } else {
                feedback.style.display = "none";
            }
        }
    </script>
}
